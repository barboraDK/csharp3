@using ToDoList.Frontend.Clients
@using ToDoList.Frontend.Views
@inject IToDoItemsClient ToDoItemsClient
@rendermode InteractiveServer

<h1>Dashboard</h1>

<table>
    <thead>
        <tr>
            <td><button @onclick="OrderById">Order by Id</button></td>
            <td><button @onclick="OrderByName">Order by Name</button></td>
        </tr>
    </thead>
    <tbody>
        @if (toDoItems is null)
        {
            <p>nacitam</p>
        }

        @if (toDoItems is not null)
        {
            @foreach (var toDoItem in toDoItems)
            {
                <tr>
                    <td>@toDoItem.ToDoItemId</td>
                    <td>@toDoItem.Name</td>
                    <td>@toDoItem.IsCompleted</td>
                    <td>@toDoItem.Description</td>
                </tr>
            }
        }

    </tbody>
</table>

@code
{
    protected override async Task OnInitializedAsync()
    {
        toDoItems = await ToDoItemsClient.ReadItemsAsync();
    }
    private List<ToDoItemView>? toDoItems;

    void OrderById()
    {
        toDoItems = toDoItems?.OrderBy(item => item.ToDoItemId).ToList();
    }

    void OrderByName()
    {
        toDoItems = toDoItems?.OrderBy(item => item.Name).ToList();
    }

}
