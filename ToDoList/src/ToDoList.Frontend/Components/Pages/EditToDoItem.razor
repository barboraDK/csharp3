@page "/editToDoItem/{ItemId:int}"
@using ToDoList.Frontend.Views
@using ToDoList.Frontend.Clients
@inject NavigationManager NavigationManager
@inject IToDoItemsClient ToDoItemsClient
@rendermode InteractiveServer

<PageTitle>Edit To Do Item</PageTitle>

@if (ToDoItem is not null)
{
    <EditForm Model="ToDoItem" FormName="EditToDoItem" OnSubmit="Submit">
        <div class="mt-3">
            <label class="form-label" for="Name">Name:</label>
            <InputText id="Name" @bind-Value="ToDoItem.Name" />
        </div>
        <InputText id="Name" @bind-Value="ToDoItem.Name" />
        <InputText id="Description" @bind-Value="ToDoItem.Description" />
        <InputCheckbox id="IsCompleted" @bind-Value="ToDoItem.IsCompleted" />
        <button type="submit">Submit</button>
    </EditForm>

    <button class="btn btn-primary" @onclick="ReturnToMain">Cancel</button>

    @ToDoItem.Name
    ;
    @ToDoItem.Description
    ;
    @ToDoItem.IsCompleted
    ;
}

@code
{
    protected override async Task OnInitializedAsync()
    {
        ToDoItem = await ToDoItemsClient.ReadItemByIdAsync(ItemId);
    }

    [Parameter]
    public int ItemId { get; set; }

    [SupplyParameterFromForm]
    public ToDoItemView ToDoItem { get; set; }

    public async Task Submit()
    {
        await ToDoItemsClient.UpdateItemAsync(ToDoItem);
        NavigationManager.NavigateTo("/");
    }

    public void ReturnToMain()
    {
        NavigationManager.NavigateTo("/");
    }
}
